
PwmGen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000ad6  00000b6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800068  00800068  00000b72  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b72  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cb6  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000679  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000394  00000000  00000000  00001ffb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  00002390  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044c  00000000  00000000  00002528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003fc  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002d70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2c 00 	jmp	0x58	; 0x58 <__dtors_end>
   4:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
   8:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__vector_3>
  10:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  14:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  18:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  1c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  20:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  24:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  28:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  2c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  30:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  34:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  38:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  3c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  40:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  44:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  48:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  4c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  50:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>

00000054 <__ctors_start>:
  54:	ca 01       	movw	r24, r20

00000056 <__ctors_end>:
  56:	cf 01       	movw	r24, r30

00000058 <__dtors_end>:
  58:	11 24       	eor	r1, r1
  5a:	1f be       	out	0x3f, r1	; 63
  5c:	cf e5       	ldi	r28, 0x5F	; 95
  5e:	d4 e0       	ldi	r29, 0x04	; 4
  60:	de bf       	out	0x3e, r29	; 62
  62:	cd bf       	out	0x3d, r28	; 61

00000064 <__do_copy_data>:
  64:	10 e0       	ldi	r17, 0x00	; 0
  66:	a0 e6       	ldi	r26, 0x60	; 96
  68:	b0 e0       	ldi	r27, 0x00	; 0
  6a:	e6 ed       	ldi	r30, 0xD6	; 214
  6c:	fa e0       	ldi	r31, 0x0A	; 10
  6e:	02 c0       	rjmp	.+4      	; 0x74 <__do_copy_data+0x10>
  70:	05 90       	lpm	r0, Z+
  72:	0d 92       	st	X+, r0
  74:	a8 36       	cpi	r26, 0x68	; 104
  76:	b1 07       	cpc	r27, r17
  78:	d9 f7       	brne	.-10     	; 0x70 <__do_copy_data+0xc>

0000007a <__do_clear_bss>:
  7a:	20 e0       	ldi	r18, 0x00	; 0
  7c:	a8 e6       	ldi	r26, 0x68	; 104
  7e:	b0 e0       	ldi	r27, 0x00	; 0
  80:	01 c0       	rjmp	.+2      	; 0x84 <.do_clear_bss_start>

00000082 <.do_clear_bss_loop>:
  82:	1d 92       	st	X+, r1

00000084 <.do_clear_bss_start>:
  84:	a2 38       	cpi	r26, 0x82	; 130
  86:	b2 07       	cpc	r27, r18
  88:	e1 f7       	brne	.-8      	; 0x82 <.do_clear_bss_loop>

0000008a <__do_global_ctors>:
  8a:	10 e0       	ldi	r17, 0x00	; 0
  8c:	cb e2       	ldi	r28, 0x2B	; 43
  8e:	d0 e0       	ldi	r29, 0x00	; 0
  90:	04 c0       	rjmp	.+8      	; 0x9a <__do_global_ctors+0x10>
  92:	21 97       	sbiw	r28, 0x01	; 1
  94:	fe 01       	movw	r30, r28
  96:	0e 94 a3 02 	call	0x546	; 0x546 <__tablejump2__>
  9a:	ca 32       	cpi	r28, 0x2A	; 42
  9c:	d1 07       	cpc	r29, r17
  9e:	c9 f7       	brne	.-14     	; 0x92 <__do_global_ctors+0x8>
  a0:	0e 94 a8 01 	call	0x350	; 0x350 <main>
  a4:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__do_global_dtors>

000000a8 <__bad_interrupt>:
  a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ac <__vector_3>:
Button pwm_mode_select = {0,70};
Encoder enc = {0,0,0};

/* Диспетчер */
ISR(TIMER2_COMP_vect)
{
  ac:	1f 92       	push	r1
  ae:	0f 92       	push	r0
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	0f 92       	push	r0
  b4:	11 24       	eor	r1, r1
  b6:	2f 93       	push	r18
  b8:	3f 93       	push	r19
  ba:	4f 93       	push	r20
  bc:	5f 93       	push	r21
  be:	6f 93       	push	r22
  c0:	7f 93       	push	r23
  c2:	8f 93       	push	r24
  c4:	9f 93       	push	r25
  c6:	af 93       	push	r26
  c8:	bf 93       	push	r27
  ca:	ef 93       	push	r30
  cc:	ff 93       	push	r31
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	1f 92       	push	r1
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
	TCNT0 = 0;
  d8:	12 be       	out	0x32, r1	; 50
	//делитель clk
	if(push_button(PIND, 6, freq_div))
  da:	80 b3       	in	r24, 0x10	; 16
  dc:	44 e6       	ldi	r20, 0x64	; 100
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	66 e0       	ldi	r22, 0x06	; 6
  e2:	0e 94 ac 01 	call	0x358	; 0x358 <_Z11push_buttonhhR6Button>
  e6:	88 23       	and	r24, r24
  e8:	f1 f0       	breq	.+60     	; 0x126 <__vector_3+0x7a>
	{
		if(state.prescaller > 4)
  ea:	80 91 6b 00 	lds	r24, 0x006B
  ee:	87 70       	andi	r24, 0x07	; 7
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	05 97       	sbiw	r24, 0x05	; 5
  f4:	2c f0       	brlt	.+10     	; 0x100 <__vector_3+0x54>
			state.prescaller = 0;
  f6:	eb e6       	ldi	r30, 0x6B	; 107
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	88 7f       	andi	r24, 0xF8	; 248
  fe:	80 83       	st	Z, r24
		pwm.set_prescaler(state.prescaller++);
 100:	eb e6       	ldi	r30, 0x6B	; 107
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	28 2f       	mov	r18, r24
 108:	27 70       	andi	r18, 0x07	; 7
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	92 0f       	add	r25, r18
 10e:	97 70       	andi	r25, 0x07	; 7
 110:	88 7f       	andi	r24, 0xF8	; 248
 112:	89 2b       	or	r24, r25
 114:	80 83       	st	Z, r24
 116:	29 83       	std	Y+1, r18	; 0x01
 118:	be 01       	movw	r22, r28
 11a:	6f 5f       	subi	r22, 0xFF	; 255
 11c:	7f 4f       	sbci	r23, 0xFF	; 255
 11e:	8d e6       	ldi	r24, 0x6D	; 109
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 0b 02 	call	0x416	; 0x416 <_ZN3PWM13set_prescalerERKh>
	}
	
	//коэфф. инкремента 
	if (push_button(PIND, 3, mult_div))
 126:	80 b3       	in	r24, 0x10	; 16
 128:	42 e6       	ldi	r20, 0x62	; 98
 12a:	50 e0       	ldi	r21, 0x00	; 0
 12c:	63 e0       	ldi	r22, 0x03	; 3
 12e:	0e 94 ac 01 	call	0x358	; 0x358 <_Z11push_buttonhhR6Button>
 132:	88 23       	and	r24, r24
 134:	09 f4       	brne	.+2      	; 0x138 <__vector_3+0x8c>
 136:	47 c0       	rjmp	.+142    	; 0x1c6 <__vector_3+0x11a>
	{
		if(state.coeff > 4)
 138:	80 91 6b 00 	lds	r24, 0x006B
 13c:	86 95       	lsr	r24
 13e:	86 95       	lsr	r24
 140:	86 95       	lsr	r24
 142:	87 70       	andi	r24, 0x07	; 7
 144:	28 2f       	mov	r18, r24
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	25 30       	cpi	r18, 0x05	; 5
 14a:	31 05       	cpc	r19, r1
 14c:	3c f0       	brlt	.+14     	; 0x15c <__vector_3+0xb0>
			state.coeff = 0;
		switch(state.coeff++)
 14e:	eb e6       	ldi	r30, 0x6B	; 107
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	87 7c       	andi	r24, 0xC7	; 199
 156:	88 60       	ori	r24, 0x08	; 8
 158:	80 83       	st	Z, r24
 15a:	1a c0       	rjmp	.+52     	; 0x190 <__vector_3+0xe4>
 15c:	8f 5f       	subi	r24, 0xFF	; 255
 15e:	87 70       	andi	r24, 0x07	; 7
 160:	eb e6       	ldi	r30, 0x6B	; 107
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	98 2f       	mov	r25, r24
 166:	99 0f       	add	r25, r25
 168:	99 0f       	add	r25, r25
 16a:	99 0f       	add	r25, r25
 16c:	80 81       	ld	r24, Z
 16e:	87 7c       	andi	r24, 0xC7	; 199
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	21 30       	cpi	r18, 0x01	; 1
 176:	31 05       	cpc	r19, r1
 178:	91 f0       	breq	.+36     	; 0x19e <__vector_3+0xf2>
 17a:	1c f4       	brge	.+6      	; 0x182 <__vector_3+0xd6>
 17c:	23 2b       	or	r18, r19
 17e:	19 f5       	brne	.+70     	; 0x1c6 <__vector_3+0x11a>
 180:	07 c0       	rjmp	.+14     	; 0x190 <__vector_3+0xe4>
 182:	22 30       	cpi	r18, 0x02	; 2
 184:	31 05       	cpc	r19, r1
 186:	91 f0       	breq	.+36     	; 0x1ac <__vector_3+0x100>
 188:	23 30       	cpi	r18, 0x03	; 3
 18a:	31 05       	cpc	r19, r1
 18c:	b1 f0       	breq	.+44     	; 0x1ba <__vector_3+0x10e>
 18e:	1b c0       	rjmp	.+54     	; 0x1c6 <__vector_3+0x11a>
		{
			case 0: coeff = 1;		break;
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	90 93 67 00 	sts	0x0067, r25
 198:	80 93 66 00 	sts	0x0066, r24
 19c:	14 c0       	rjmp	.+40     	; 0x1c6 <__vector_3+0x11a>
			case 1: coeff = 10;		break;
 19e:	8a e0       	ldi	r24, 0x0A	; 10
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	90 93 67 00 	sts	0x0067, r25
 1a6:	80 93 66 00 	sts	0x0066, r24
 1aa:	0d c0       	rjmp	.+26     	; 0x1c6 <__vector_3+0x11a>
			case 2: coeff = 100;	break;
 1ac:	84 e6       	ldi	r24, 0x64	; 100
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	90 93 67 00 	sts	0x0067, r25
 1b4:	80 93 66 00 	sts	0x0066, r24
 1b8:	06 c0       	rjmp	.+12     	; 0x1c6 <__vector_3+0x11a>
			case 3: coeff = 1000;	break;
 1ba:	88 ee       	ldi	r24, 0xE8	; 232
 1bc:	93 e0       	ldi	r25, 0x03	; 3
 1be:	90 93 67 00 	sts	0x0067, r25
 1c2:	80 93 66 00 	sts	0x0066, r24
		}
	}
	
	if(push_button(PIND, 2, pwm_mode_select))
 1c6:	80 b3       	in	r24, 0x10	; 16
 1c8:	40 e6       	ldi	r20, 0x60	; 96
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	62 e0       	ldi	r22, 0x02	; 2
 1ce:	0e 94 ac 01 	call	0x358	; 0x358 <_Z11push_buttonhhR6Button>
 1d2:	88 23       	and	r24, r24
 1d4:	09 f4       	brne	.+2      	; 0x1d8 <__vector_3+0x12c>
 1d6:	58 c0       	rjmp	.+176    	; 0x288 <__vector_3+0x1dc>
	{
		if(state.pwm_mode > 3)
 1d8:	80 91 6b 00 	lds	r24, 0x006B
 1dc:	98 2f       	mov	r25, r24
 1de:	92 95       	swap	r25
 1e0:	96 95       	lsr	r25
 1e2:	96 95       	lsr	r25
 1e4:	93 70       	andi	r25, 0x03	; 3
 1e6:	80 91 6c 00 	lds	r24, 0x006C
 1ea:	81 70       	andi	r24, 0x01	; 1
 1ec:	88 0f       	add	r24, r24
 1ee:	88 0f       	add	r24, r24
 1f0:	89 2b       	or	r24, r25
 1f2:	28 2f       	mov	r18, r24
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	24 30       	cpi	r18, 0x04	; 4
 1f8:	31 05       	cpc	r19, r1
 1fa:	64 f0       	brlt	.+24     	; 0x214 <__vector_3+0x168>
			state.pwm_mode = 0;
		switch(state.pwm_mode++)
 1fc:	eb e6       	ldi	r30, 0x6B	; 107
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	8f 73       	andi	r24, 0x3F	; 63
 204:	80 64       	ori	r24, 0x40	; 64
 206:	80 83       	st	Z, r24
 208:	ec e6       	ldi	r30, 0x6C	; 108
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	80 81       	ld	r24, Z
 20e:	8e 7f       	andi	r24, 0xFE	; 254
 210:	80 83       	st	Z, r24
 212:	23 c0       	rjmp	.+70     	; 0x25a <__vector_3+0x1ae>
 214:	8f 5f       	subi	r24, 0xFF	; 255
 216:	eb e6       	ldi	r30, 0x6B	; 107
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	48 2f       	mov	r20, r24
 21c:	42 95       	swap	r20
 21e:	44 0f       	add	r20, r20
 220:	44 0f       	add	r20, r20
 222:	40 7c       	andi	r20, 0xC0	; 192
 224:	90 81       	ld	r25, Z
 226:	9f 73       	andi	r25, 0x3F	; 63
 228:	94 2b       	or	r25, r20
 22a:	90 83       	st	Z, r25
 22c:	82 fb       	bst	r24, 2
 22e:	99 27       	eor	r25, r25
 230:	90 f9       	bld	r25, 0
 232:	ec e6       	ldi	r30, 0x6C	; 108
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	8e 7f       	andi	r24, 0xFE	; 254
 23a:	89 2b       	or	r24, r25
 23c:	80 83       	st	Z, r24
 23e:	21 30       	cpi	r18, 0x01	; 1
 240:	31 05       	cpc	r19, r1
 242:	89 f0       	breq	.+34     	; 0x266 <__vector_3+0x1ba>
 244:	1c f4       	brge	.+6      	; 0x24c <__vector_3+0x1a0>
 246:	23 2b       	or	r18, r19
 248:	f9 f4       	brne	.+62     	; 0x288 <__vector_3+0x1dc>
 24a:	07 c0       	rjmp	.+14     	; 0x25a <__vector_3+0x1ae>
 24c:	22 30       	cpi	r18, 0x02	; 2
 24e:	31 05       	cpc	r19, r1
 250:	81 f0       	breq	.+32     	; 0x272 <__vector_3+0x1c6>
 252:	23 30       	cpi	r18, 0x03	; 3
 254:	31 05       	cpc	r19, r1
 256:	99 f0       	breq	.+38     	; 0x27e <__vector_3+0x1d2>
 258:	17 c0       	rjmp	.+46     	; 0x288 <__vector_3+0x1dc>
		{
			case 0: pwm.set_mode_pwm(PWM::CTC);					break;
 25a:	64 e0       	ldi	r22, 0x04	; 4
 25c:	8d e6       	ldi	r24, 0x6D	; 109
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_ZN3PWM12set_mode_pwmENS_5_MODEE>
 264:	11 c0       	rjmp	.+34     	; 0x288 <__vector_3+0x1dc>
			case 1: pwm.set_mode_pwm(PWM::FAST_PWM);			break;
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	8d e6       	ldi	r24, 0x6D	; 109
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_ZN3PWM12set_mode_pwmENS_5_MODEE>
 270:	0b c0       	rjmp	.+22     	; 0x288 <__vector_3+0x1dc>
			case 2: pwm.set_mode_pwm(PWM::PHASE_CORRECT);		break;
 272:	62 e0       	ldi	r22, 0x02	; 2
 274:	8d e6       	ldi	r24, 0x6D	; 109
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_ZN3PWM12set_mode_pwmENS_5_MODEE>
 27c:	05 c0       	rjmp	.+10     	; 0x288 <__vector_3+0x1dc>
			case 3: pwm.set_mode_pwm(PWM::PHASE_FREQ_CORRECT);	break;
 27e:	63 e0       	ldi	r22, 0x03	; 3
 280:	8d e6       	ldi	r24, 0x6D	; 109
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_ZN3PWM12set_mode_pwmENS_5_MODEE>
		}
	}
	
	//проверка энкодера
	if((!(PINA & BIT1) || !(PINA & BIT2)) || (enc.detect == true))
 288:	c9 9b       	sbis	0x19, 1	; 25
 28a:	07 c0       	rjmp	.+14     	; 0x29a <__vector_3+0x1ee>
 28c:	ca 9b       	sbis	0x19, 2	; 25
 28e:	05 c0       	rjmp	.+10     	; 0x29a <__vector_3+0x1ee>
 290:	80 91 68 00 	lds	r24, 0x0068
 294:	88 23       	and	r24, r24
 296:	09 f4       	brne	.+2      	; 0x29a <__vector_3+0x1ee>
 298:	45 c0       	rjmp	.+138    	; 0x324 <__vector_3+0x278>
	{
		if(enc.init == false)
 29a:	80 91 69 00 	lds	r24, 0x0069
 29e:	81 11       	cpse	r24, r1
 2a0:	30 c0       	rjmp	.+96     	; 0x302 <__vector_3+0x256>
		{
			enc.detect = true;
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	80 93 68 00 	sts	0x0068, r24
			uint16_t tmp = OCR1AH<<8 | OCR1AL;
 2a8:	2b b5       	in	r18, 0x2b	; 43
 2aa:	8a b5       	in	r24, 0x2a	; 42
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	92 2b       	or	r25, r18
			if(PINA & BIT1)
 2b0:	c9 9b       	sbis	0x19, 1	; 25
 2b2:	13 c0       	rjmp	.+38     	; 0x2da <__vector_3+0x22e>
			{
				if(coeff <= 0xFFFF - tmp)
 2b4:	20 91 66 00 	lds	r18, 0x0066
 2b8:	30 91 67 00 	lds	r19, 0x0067
 2bc:	ac 01       	movw	r20, r24
 2be:	40 95       	com	r20
 2c0:	50 95       	com	r21
 2c2:	42 17       	cp	r20, r18
 2c4:	53 07       	cpc	r21, r19
 2c6:	28 f0       	brcs	.+10     	; 0x2d2 <__vector_3+0x226>
				{
					tmp += coeff;
 2c8:	82 0f       	add	r24, r18
 2ca:	93 1f       	adc	r25, r19
					OCR1AH = (uint8_t)(tmp>>8);
 2cc:	9b bd       	out	0x2b, r25	; 43
					OCR1AL = (uint8_t)tmp;
 2ce:	8a bd       	out	0x2a, r24	; 42
 2d0:	12 c0       	rjmp	.+36     	; 0x2f6 <__vector_3+0x24a>
				}
				else
				{
					OCR1AH = 0xFF;
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	8b bd       	out	0x2b, r24	; 43
					OCR1AL = 0xFF;
 2d6:	8a bd       	out	0x2a, r24	; 42
 2d8:	0e c0       	rjmp	.+28     	; 0x2f6 <__vector_3+0x24a>
				}
			}
			else
			{	
				if(tmp >= coeff)
 2da:	20 91 66 00 	lds	r18, 0x0066
 2de:	30 91 67 00 	lds	r19, 0x0067
 2e2:	82 17       	cp	r24, r18
 2e4:	93 07       	cpc	r25, r19
 2e6:	28 f0       	brcs	.+10     	; 0x2f2 <__vector_3+0x246>
				{
					tmp -= coeff;
 2e8:	82 1b       	sub	r24, r18
 2ea:	93 0b       	sbc	r25, r19
					OCR1AH = (uint8_t)(tmp>>8);
 2ec:	9b bd       	out	0x2b, r25	; 43
					OCR1AL = (uint8_t)tmp;
 2ee:	8a bd       	out	0x2a, r24	; 42
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <__vector_3+0x24a>
				}
				else
				{
					OCR1AH = 0x00;
 2f2:	1b bc       	out	0x2b, r1	; 43
					OCR1AL = 0x00;
 2f4:	1a bc       	out	0x2a, r1	; 42
				}
			}
								
			enc.delay = 10;
 2f6:	e8 e6       	ldi	r30, 0x68	; 104
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	8a e0       	ldi	r24, 0x0A	; 10
 2fc:	82 83       	std	Z+2, r24	; 0x02
			enc.init = true;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	81 83       	std	Z+1, r24	; 0x01
		}
		if((PINA & BIT1) && (PINA & BIT2) && !(enc.delay ? --enc.delay : 0))
 302:	c9 9b       	sbis	0x19, 1	; 25
 304:	0f c0       	rjmp	.+30     	; 0x324 <__vector_3+0x278>
 306:	ca 9b       	sbis	0x19, 2	; 25
 308:	0d c0       	rjmp	.+26     	; 0x324 <__vector_3+0x278>
 30a:	80 91 6a 00 	lds	r24, 0x006A
 30e:	88 23       	and	r24, r24
 310:	29 f0       	breq	.+10     	; 0x31c <__vector_3+0x270>
 312:	81 50       	subi	r24, 0x01	; 1
 314:	80 93 6a 00 	sts	0x006A, r24
 318:	81 11       	cpse	r24, r1
 31a:	04 c0       	rjmp	.+8      	; 0x324 <__vector_3+0x278>
		{
			enc.detect = false;
 31c:	e8 e6       	ldi	r30, 0x68	; 104
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	10 82       	st	Z, r1
			enc.init = false;
 322:	11 82       	std	Z+1, r1	; 0x01
		}
	}
	

	// запуск преобразований ADC
	if(!(ADCSRA & 1<<ADSC))
 324:	86 b1       	in	r24, 0x06	; 6
	{	
								
	}
	ADCSRA |= 1<<ADSC;					
 326:	36 9a       	sbi	0x06, 6	; 6
}
 328:	0f 90       	pop	r0
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	ff 91       	pop	r31
 330:	ef 91       	pop	r30
 332:	bf 91       	pop	r27
 334:	af 91       	pop	r26
 336:	9f 91       	pop	r25
 338:	8f 91       	pop	r24
 33a:	7f 91       	pop	r23
 33c:	6f 91       	pop	r22
 33e:	5f 91       	pop	r21
 340:	4f 91       	pop	r20
 342:	3f 91       	pop	r19
 344:	2f 91       	pop	r18
 346:	0f 90       	pop	r0
 348:	0f be       	out	0x3f, r0	; 63
 34a:	0f 90       	pop	r0
 34c:	1f 90       	pop	r1
 34e:	18 95       	reti

00000350 <main>:
#include "Main.h"
PWM pwm;

int main( void )
{
	peiph_init();
 350:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <_Z10peiph_initv>

// 	lcd_init();
// 	lcd_clrscr();
// 	lcd_puts("Hello World...");
	
	sei();
 354:	78 94       	sei
#include "Main.h"
PWM pwm;

int main( void )
 356:	ff cf       	rjmp	.-2      	; 0x356 <main+0x6>

00000358 <_Z11push_buttonhhR6Button>:
	}
}

bool push_button (const uint8_t PINX, const uint8_t pin_number, Button &but)
{
	if (!(PINX & 1<<pin_number))
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	02 c0       	rjmp	.+4      	; 0x360 <_Z11push_buttonhhR6Button+0x8>
 35c:	95 95       	asr	r25
 35e:	87 95       	ror	r24
 360:	6a 95       	dec	r22
 362:	e2 f7       	brpl	.-8      	; 0x35c <_Z11push_buttonhhR6Button+0x4>
 364:	80 fd       	sbrc	r24, 0
 366:	05 c0       	rjmp	.+10     	; 0x372 <_Z11push_buttonhhR6Button+0x1a>
		but.detect = true;
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	fa 01       	movw	r30, r20
 36c:	80 83       	st	Z, r24
		{
			but.time = 70;
			but.detect = false;
			return true;
		}
	return false;
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	08 95       	ret
bool push_button (const uint8_t PINX, const uint8_t pin_number, Button &but)
{
	if (!(PINX & 1<<pin_number))
		but.detect = true;
	else
		if ((but.detect == true) && !(but.time ? but.time-- : 0))
 372:	fa 01       	movw	r30, r20
 374:	80 81       	ld	r24, Z
 376:	88 23       	and	r24, r24
 378:	59 f0       	breq	.+22     	; 0x390 <_Z11push_buttonhhR6Button+0x38>
 37a:	91 81       	ldd	r25, Z+1	; 0x01
 37c:	99 23       	and	r25, r25
 37e:	19 f0       	breq	.+6      	; 0x386 <_Z11push_buttonhhR6Button+0x2e>
 380:	91 50       	subi	r25, 0x01	; 1
 382:	91 83       	std	Z+1, r25	; 0x01
 384:	05 c0       	rjmp	.+10     	; 0x390 <_Z11push_buttonhhR6Button+0x38>
		{
			but.time = 70;
 386:	96 e4       	ldi	r25, 0x46	; 70
 388:	fa 01       	movw	r30, r20
 38a:	91 83       	std	Z+1, r25	; 0x01
			but.detect = false;
 38c:	10 82       	st	Z, r1
			return true;
 38e:	08 95       	ret
		}
	return false;
 390:	80 e0       	ldi	r24, 0x00	; 0
}
 392:	08 95       	ret

00000394 <_GLOBAL__sub_I_pwm>:
#include "Main.h"
PWM pwm;
 394:	8d e6       	ldi	r24, 0x6D	; 109
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN3PWMC1Ev>
 39c:	08 95       	ret

0000039e <_GLOBAL__sub_D_pwm>:
 39e:	8d e6       	ldi	r24, 0x6D	; 109
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 98 02 	call	0x530	; 0x530 <_ZN3PWMD1Ev>
 3a6:	08 95       	ret

000003a8 <_Z10peiph_initv>:
#include "periph_init.h"

void peiph_init()
{
	DDRB =	BIT3;									// ШИМ
 3a8:	88 e0       	ldi	r24, 0x08	; 8
 3aa:	87 bb       	out	0x17, r24	; 23
	DDRD =	BIT4 | BIT5;							// светодиоды
 3ac:	80 e3       	ldi	r24, 0x30	; 48
 3ae:	81 bb       	out	0x11, r24	; 17
	PORTD = BIT2 | BIT3 | BIT6;						// кнопки
 3b0:	8c e4       	ldi	r24, 0x4C	; 76
 3b2:	82 bb       	out	0x12, r24	; 18
	PORTB = BIT1 | BIT2;							// энкодер	
 3b4:	86 e0       	ldi	r24, 0x06	; 6
 3b6:	88 bb       	out	0x18, r24	; 24
	//GICR =	(1<<INT0);								// PD2(16)
	//MCUCR =	(1<<ISC01) | (0<<ISC00);				// по спаду 
	
	//ADC initial
	ADMUX	=	(1<<ADLAR)|							// выравнивание по левому краю
				(0<<REFS1)|(1<<REFS0);				// опорное напряжение от внешнего источника питания
 3b8:	80 e6       	ldi	r24, 0x60	; 96
 3ba:	87 b9       	out	0x07, r24	; 7
	
	SFIOR	=	(0<<ADTS2)|(0<<ADTS1)|(0<<ADTS0);	// преобразование по прерыванию TIM0 OCR0
 3bc:	10 be       	out	0x30, r1	; 48
	
	ADCSRA	=	(1<<ADEN); 							// ADC ON
 3be:	80 e8       	ldi	r24, 0x80	; 128
 3c0:	86 b9       	out	0x06, r24	; 6
				//(1<<ADSC) |						// включение преобразования (сбрасывается по окончанию) 
				//(1<<ADATE);						// автоматическое включение преобразований

	//TIM2 initial periodic system timer
	TIMSK |= (1<<OCIE2);							// прерывание по сравнению
 3c2:	89 b7       	in	r24, 0x39	; 57
 3c4:	80 68       	ori	r24, 0x80	; 128
 3c6:	89 bf       	out	0x39, r24	; 57
	TCCR2 = (1<<FOC2) |								// режим NORMAL
			(0<<CS22) |(1<<CS21) |(1<<CS20);		// clk/256
 3c8:	83 e8       	ldi	r24, 0x83	; 131
 3ca:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0;										// обнуление счётного регистра
 3cc:	14 bc       	out	0x24, r1	; 36
	OCR2  = 125;									// регистр сравнения
 3ce:	8d e7       	ldi	r24, 0x7D	; 125
 3d0:	83 bd       	out	0x23, r24	; 35
 3d2:	08 95       	ret

000003d4 <_ZN3PWMC1Ev>:
#include "PWM.h"

PWM::PWM()
 3d4:	fc 01       	movw	r30, r24
{
	mode = INITIAL;
 3d6:	80 81       	ld	r24, Z
 3d8:	88 7f       	andi	r24, 0xF8	; 248
 3da:	80 83       	st	Z, r24
	
	FastPWM_settings._TCCR1A = 0<<WGM11 | 1<< WGM10 | 1<<COM1A1 | 0<<COM1A0;
 3dc:	81 e8       	ldi	r24, 0x81	; 129
 3de:	86 83       	std	Z+6, r24	; 0x06
	FastPWM_settings._TCCR1B = 0<<WGM13 | 1<< WGM12 | 0<<CS12	| 0<<CS11	| 1<<CS10;
 3e0:	99 e0       	ldi	r25, 0x09	; 9
 3e2:	97 83       	std	Z+7, r25	; 0x07
	FastPWM_settings._OCR1AH = 0;
 3e4:	10 86       	std	Z+8, r1	; 0x08
	FastPWM_settings._OCR1AL = 0;
 3e6:	11 86       	std	Z+9, r1	; 0x09
	
	CTC_settings._TCCR1A = 0<<WGM11 | 0<< WGM10 | 0<<COM1A1 | 1<<COM1A0;
 3e8:	20 e4       	ldi	r18, 0x40	; 64
 3ea:	21 83       	std	Z+1, r18	; 0x01
	CTC_settings._TCCR1B = 0<<WGM13 | 1<< WGM12 | 0<<CS12	| 0<<CS11	| 1<<CS10;
 3ec:	92 83       	std	Z+2, r25	; 0x02
	CTC_settings._OCR1AH = 0;
 3ee:	13 82       	std	Z+3, r1	; 0x03
	CTC_settings._OCR1AL = 0;
 3f0:	14 82       	std	Z+4, r1	; 0x04
	
	PhaseCorrect_settings._TCCR1A = 0<<WGM11 | 1<< WGM10 | 1<<COM1A1 | 0<<COM1A0;
 3f2:	83 87       	std	Z+11, r24	; 0x0b
	PhaseCorrect_settings._TCCR1B = 0<<WGM13 | 0<< WGM12 | 0<<CS12	 | 0<<CS11	| 1<<CS10;
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	94 87       	std	Z+12, r25	; 0x0c
	PhaseCorrect_settings._OCR1AH = 0;
 3f8:	15 86       	std	Z+13, r1	; 0x0d
	PhaseCorrect_settings._OCR1AL = 0;
 3fa:	16 86       	std	Z+14, r1	; 0x0e

	PhaseCorrectFreq_settings._TCCR1A = 0<<WGM11 | 1<< WGM10 | 1<<COM1A1 | 0<<COM1A0;
 3fc:	80 8b       	std	Z+16, r24	; 0x10
	PhaseCorrectFreq_settings._TCCR1B = 1<<WGM13 | 0<< WGM12 | 0<<CS12	 | 0<<CS11	| 1<<CS10;
 3fe:	81 e1       	ldi	r24, 0x11	; 17
 400:	81 8b       	std	Z+17, r24	; 0x11
	PhaseCorrectFreq_settings._OCR1AH = 0;
 402:	12 8a       	std	Z+18, r1	; 0x12
	PhaseCorrectFreq_settings._OCR1AL = 0;
 404:	13 8a       	std	Z+19, r1	; 0x13


	TCCR1A = 0;
 406:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0;
 408:	1e bc       	out	0x2e, r1	; 46
	TCNT1H = 0;	TCNT1L = 0;									// обнуление счётного регистра
 40a:	1d bc       	out	0x2d, r1	; 45
 40c:	1c bc       	out	0x2c, r1	; 44
	OCR1AH = 0;	OCR1AL = 0;									// обнуление регистра сравнения выходного сигнала
 40e:	1b bc       	out	0x2b, r1	; 43
 410:	1a bc       	out	0x2a, r1	; 42
	
	DDRD	|=	OC1A_bit;									// OC1A ON
 412:	8d 9a       	sbi	0x11, 5	; 17
 414:	08 95       	ret

00000416 <_ZN3PWM13set_prescalerERKh>:
}

// выбор деления входной частоты 
void PWM::set_prescaler(const uint8_t &state)
{
	TCCR1B &=~ ((1<<CS12) | (1<<CS11) | (1<<CS10));
 416:	8e b5       	in	r24, 0x2e	; 46
 418:	88 7f       	andi	r24, 0xF8	; 248
 41a:	8e bd       	out	0x2e, r24	; 46
	switch(state)
 41c:	fb 01       	movw	r30, r22
 41e:	80 81       	ld	r24, Z
 420:	82 30       	cpi	r24, 0x02	; 2
 422:	99 f0       	breq	.+38     	; 0x44a <_ZN3PWM13set_prescalerERKh+0x34>
 424:	28 f4       	brcc	.+10     	; 0x430 <_ZN3PWM13set_prescalerERKh+0x1a>
 426:	88 23       	and	r24, r24
 428:	41 f0       	breq	.+16     	; 0x43a <_ZN3PWM13set_prescalerERKh+0x24>
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	51 f0       	breq	.+20     	; 0x442 <_ZN3PWM13set_prescalerERKh+0x2c>
 42e:	08 95       	ret
 430:	83 30       	cpi	r24, 0x03	; 3
 432:	79 f0       	breq	.+30     	; 0x452 <_ZN3PWM13set_prescalerERKh+0x3c>
 434:	84 30       	cpi	r24, 0x04	; 4
 436:	89 f0       	breq	.+34     	; 0x45a <_ZN3PWM13set_prescalerERKh+0x44>
 438:	08 95       	ret
	{
		case 0: TCCR1B |= (0<<CS12) | (0<<CS11) | (1<<CS10);  break;
 43a:	8e b5       	in	r24, 0x2e	; 46
 43c:	81 60       	ori	r24, 0x01	; 1
 43e:	8e bd       	out	0x2e, r24	; 46
 440:	08 95       	ret
		case 1: TCCR1B |= (0<<CS12) | (1<<CS11) | (0<<CS10);  break;
 442:	8e b5       	in	r24, 0x2e	; 46
 444:	82 60       	ori	r24, 0x02	; 2
 446:	8e bd       	out	0x2e, r24	; 46
 448:	08 95       	ret
		case 2: TCCR1B |= (0<<CS12) | (1<<CS11) | (1<<CS10);  break;
 44a:	8e b5       	in	r24, 0x2e	; 46
 44c:	83 60       	ori	r24, 0x03	; 3
 44e:	8e bd       	out	0x2e, r24	; 46
 450:	08 95       	ret
		case 3: TCCR1B |= (1<<CS12) | (0<<CS11) | (0<<CS10);  break;
 452:	8e b5       	in	r24, 0x2e	; 46
 454:	84 60       	ori	r24, 0x04	; 4
 456:	8e bd       	out	0x2e, r24	; 46
 458:	08 95       	ret
		case 4:	TCCR1B |= (1<<CS12) | (0<<CS11) | (1<<CS10);  break;
 45a:	8e b5       	in	r24, 0x2e	; 46
 45c:	85 60       	ori	r24, 0x05	; 5
 45e:	8e bd       	out	0x2e, r24	; 46
 460:	08 95       	ret

00000462 <_ZN3PWM11select_modeERKh>:
		OCR1AL = 0;
	}
}

settings* PWM::select_mode(const uint8_t &mode)
{
 462:	9c 01       	movw	r18, r24
	settings* tmp;
	switch(mode)
 464:	fb 01       	movw	r30, r22
 466:	90 81       	ld	r25, Z
 468:	92 30       	cpi	r25, 0x02	; 2
 46a:	79 f0       	breq	.+30     	; 0x48a <_ZN3PWM11select_modeERKh+0x28>
 46c:	18 f4       	brcc	.+6      	; 0x474 <_ZN3PWM11select_modeERKh+0x12>
 46e:	91 30       	cpi	r25, 0x01	; 1
 470:	31 f0       	breq	.+12     	; 0x47e <_ZN3PWM11select_modeERKh+0x1c>
 472:	11 c0       	rjmp	.+34     	; 0x496 <_ZN3PWM11select_modeERKh+0x34>
 474:	93 30       	cpi	r25, 0x03	; 3
 476:	61 f0       	breq	.+24     	; 0x490 <_ZN3PWM11select_modeERKh+0x2e>
 478:	94 30       	cpi	r25, 0x04	; 4
 47a:	21 f0       	breq	.+8      	; 0x484 <_ZN3PWM11select_modeERKh+0x22>
 47c:	0c c0       	rjmp	.+24     	; 0x496 <_ZN3PWM11select_modeERKh+0x34>
	{
		case FAST_PWM:				tmp = &FastPWM_settings;			break;
 47e:	c9 01       	movw	r24, r18
 480:	06 96       	adiw	r24, 0x06	; 6
 482:	08 95       	ret
		case CTC:					tmp = &CTC_settings;				break;
 484:	c9 01       	movw	r24, r18
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	08 95       	ret
		case PHASE_CORRECT:			tmp = &PhaseCorrect_settings;		break;
 48a:	c9 01       	movw	r24, r18
 48c:	0b 96       	adiw	r24, 0x0b	; 11
 48e:	08 95       	ret
		case PHASE_FREQ_CORRECT:	tmp = &PhaseCorrectFreq_settings;	break;
 490:	c9 01       	movw	r24, r18
 492:	40 96       	adiw	r24, 0x10	; 16
 494:	08 95       	ret
		default: return 0;
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
	}
	return tmp;
}
 49a:	08 95       	ret

0000049c <_ZN3PWM13save_settingsEv>:
		case 4:	TCCR1B |= (1<<CS12) | (0<<CS11) | (1<<CS10);  break;
	}
}

void PWM::save_settings()
{
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	1f 92       	push	r1
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	fc 01       	movw	r30, r24
	settings *tmp;
	tmp = select_mode(mode);	
 4a8:	90 81       	ld	r25, Z
 4aa:	97 70       	andi	r25, 0x07	; 7
 4ac:	99 83       	std	Y+1, r25	; 0x01
 4ae:	be 01       	movw	r22, r28
 4b0:	6f 5f       	subi	r22, 0xFF	; 255
 4b2:	7f 4f       	sbci	r23, 0xFF	; 255
 4b4:	cf 01       	movw	r24, r30
 4b6:	0e 94 31 02 	call	0x462	; 0x462 <_ZN3PWM11select_modeERKh>
 4ba:	fc 01       	movw	r30, r24
	tmp->_OCR1AH = OCR1AH;
 4bc:	8b b5       	in	r24, 0x2b	; 43
 4be:	82 83       	std	Z+2, r24	; 0x02
	tmp->_OCR1AL = OCR1AL;
 4c0:	8a b5       	in	r24, 0x2a	; 42
 4c2:	83 83       	std	Z+3, r24	; 0x03
	tmp->save	 = true;
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	84 83       	std	Z+4, r24	; 0x04
}
 4c8:	0f 90       	pop	r0
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	08 95       	ret

000004d0 <_ZN3PWM12set_mode_pwmENS_5_MODEE>:

void PWM::set_mode_pwm(_MODE _M)
{
 4d0:	ff 92       	push	r15
 4d2:	0f 93       	push	r16
 4d4:	1f 93       	push	r17
 4d6:	cf 93       	push	r28
 4d8:	df 93       	push	r29
 4da:	1f 92       	push	r1
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
 4e0:	8c 01       	movw	r16, r24
 4e2:	f6 2e       	mov	r15, r22
	save_settings();
 4e4:	0e 94 4e 02 	call	0x49c	; 0x49c <_ZN3PWM13save_settingsEv>
	mode = _M;
 4e8:	6f 2d       	mov	r22, r15
 4ea:	67 70       	andi	r22, 0x07	; 7
 4ec:	f8 01       	movw	r30, r16
 4ee:	90 81       	ld	r25, Z
 4f0:	98 7f       	andi	r25, 0xF8	; 248
 4f2:	96 2b       	or	r25, r22
 4f4:	90 83       	st	Z, r25
	settings *mode_setting;
	mode_setting = select_mode(mode);
 4f6:	69 83       	std	Y+1, r22	; 0x01
 4f8:	be 01       	movw	r22, r28
 4fa:	6f 5f       	subi	r22, 0xFF	; 255
 4fc:	7f 4f       	sbci	r23, 0xFF	; 255
 4fe:	c8 01       	movw	r24, r16
 500:	0e 94 31 02 	call	0x462	; 0x462 <_ZN3PWM11select_modeERKh>
 504:	fc 01       	movw	r30, r24

	TCCR1A = mode_setting->_TCCR1A;
 506:	80 81       	ld	r24, Z
 508:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = mode_setting->_TCCR1B;
 50a:	81 81       	ldd	r24, Z+1	; 0x01
 50c:	8e bd       	out	0x2e, r24	; 46
	
	if (mode_setting->save)
 50e:	84 81       	ldd	r24, Z+4	; 0x04
 510:	88 23       	and	r24, r24
 512:	29 f0       	breq	.+10     	; 0x51e <_ZN3PWM12set_mode_pwmENS_5_MODEE+0x4e>
	{
		OCR1AH = mode_setting->_OCR1AH;
 514:	82 81       	ldd	r24, Z+2	; 0x02
 516:	8b bd       	out	0x2b, r24	; 43
		OCR1AL = mode_setting->_OCR1AL;
 518:	83 81       	ldd	r24, Z+3	; 0x03
 51a:	8a bd       	out	0x2a, r24	; 42
 51c:	02 c0       	rjmp	.+4      	; 0x522 <_ZN3PWM12set_mode_pwmENS_5_MODEE+0x52>
	}
	else
	{
		OCR1AH = 0;
 51e:	1b bc       	out	0x2b, r1	; 43
		OCR1AL = 0;
 520:	1a bc       	out	0x2a, r1	; 42
	}
}
 522:	0f 90       	pop	r0
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	ff 90       	pop	r15
 52e:	08 95       	ret

00000530 <_ZN3PWMD1Ev>:
}


PWM::~PWM()
{
	TIMSK	&=~ (1<<OCIE1A);
 530:	89 b7       	in	r24, 0x39	; 57
 532:	8f 7e       	andi	r24, 0xEF	; 239
 534:	89 bf       	out	0x39, r24	; 57
	TCCR1A	= 0;
 536:	1f bc       	out	0x2f, r1	; 47
	TCCR1B	= 0;
 538:	1e bc       	out	0x2e, r1	; 46
	DDRD	&=~ OC1A_bit;
 53a:	8d 98       	cbi	0x11, 5	; 17
	TCNT1H	= 0;	TCNT1L = 0;									// обнуление счётного регистра
 53c:	1d bc       	out	0x2d, r1	; 45
 53e:	1c bc       	out	0x2c, r1	; 44
	OCR1AH	= 0;	OCR1AL = 0;									// обнуление регистра сравнения выходного сигнала
 540:	1b bc       	out	0x2b, r1	; 43
 542:	1a bc       	out	0x2a, r1	; 42
 544:	08 95       	ret

00000546 <__tablejump2__>:
 546:	ee 0f       	add	r30, r30
 548:	ff 1f       	adc	r31, r31
 54a:	05 90       	lpm	r0, Z+
 54c:	f4 91       	lpm	r31, Z
 54e:	e0 2d       	mov	r30, r0
 550:	09 94       	ijmp

00000552 <vfprintf>:
 552:	ac e0       	ldi	r26, 0x0C	; 12
 554:	b0 e0       	ldi	r27, 0x00	; 0
 556:	ef ea       	ldi	r30, 0xAF	; 175
 558:	f2 e0       	ldi	r31, 0x02	; 2
 55a:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__prologue_saves__>
 55e:	7c 01       	movw	r14, r24
 560:	6b 01       	movw	r12, r22
 562:	8a 01       	movw	r16, r20
 564:	fc 01       	movw	r30, r24
 566:	17 82       	std	Z+7, r1	; 0x07
 568:	16 82       	std	Z+6, r1	; 0x06
 56a:	83 81       	ldd	r24, Z+3	; 0x03
 56c:	81 ff       	sbrs	r24, 1
 56e:	bd c1       	rjmp	.+890    	; 0x8ea <vfprintf+0x398>
 570:	ce 01       	movw	r24, r28
 572:	01 96       	adiw	r24, 0x01	; 1
 574:	4c 01       	movw	r8, r24
 576:	f7 01       	movw	r30, r14
 578:	93 81       	ldd	r25, Z+3	; 0x03
 57a:	f6 01       	movw	r30, r12
 57c:	93 fd       	sbrc	r25, 3
 57e:	85 91       	lpm	r24, Z+
 580:	93 ff       	sbrs	r25, 3
 582:	81 91       	ld	r24, Z+
 584:	6f 01       	movw	r12, r30
 586:	88 23       	and	r24, r24
 588:	09 f4       	brne	.+2      	; 0x58c <vfprintf+0x3a>
 58a:	ab c1       	rjmp	.+854    	; 0x8e2 <vfprintf+0x390>
 58c:	85 32       	cpi	r24, 0x25	; 37
 58e:	39 f4       	brne	.+14     	; 0x59e <vfprintf+0x4c>
 590:	93 fd       	sbrc	r25, 3
 592:	85 91       	lpm	r24, Z+
 594:	93 ff       	sbrs	r25, 3
 596:	81 91       	ld	r24, Z+
 598:	6f 01       	movw	r12, r30
 59a:	85 32       	cpi	r24, 0x25	; 37
 59c:	29 f4       	brne	.+10     	; 0x5a8 <vfprintf+0x56>
 59e:	b7 01       	movw	r22, r14
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 5a6:	e7 cf       	rjmp	.-50     	; 0x576 <vfprintf+0x24>
 5a8:	51 2c       	mov	r5, r1
 5aa:	31 2c       	mov	r3, r1
 5ac:	20 e0       	ldi	r18, 0x00	; 0
 5ae:	20 32       	cpi	r18, 0x20	; 32
 5b0:	a0 f4       	brcc	.+40     	; 0x5da <vfprintf+0x88>
 5b2:	8b 32       	cpi	r24, 0x2B	; 43
 5b4:	69 f0       	breq	.+26     	; 0x5d0 <vfprintf+0x7e>
 5b6:	30 f4       	brcc	.+12     	; 0x5c4 <vfprintf+0x72>
 5b8:	80 32       	cpi	r24, 0x20	; 32
 5ba:	59 f0       	breq	.+22     	; 0x5d2 <vfprintf+0x80>
 5bc:	83 32       	cpi	r24, 0x23	; 35
 5be:	69 f4       	brne	.+26     	; 0x5da <vfprintf+0x88>
 5c0:	20 61       	ori	r18, 0x10	; 16
 5c2:	2c c0       	rjmp	.+88     	; 0x61c <vfprintf+0xca>
 5c4:	8d 32       	cpi	r24, 0x2D	; 45
 5c6:	39 f0       	breq	.+14     	; 0x5d6 <vfprintf+0x84>
 5c8:	80 33       	cpi	r24, 0x30	; 48
 5ca:	39 f4       	brne	.+14     	; 0x5da <vfprintf+0x88>
 5cc:	21 60       	ori	r18, 0x01	; 1
 5ce:	26 c0       	rjmp	.+76     	; 0x61c <vfprintf+0xca>
 5d0:	22 60       	ori	r18, 0x02	; 2
 5d2:	24 60       	ori	r18, 0x04	; 4
 5d4:	23 c0       	rjmp	.+70     	; 0x61c <vfprintf+0xca>
 5d6:	28 60       	ori	r18, 0x08	; 8
 5d8:	21 c0       	rjmp	.+66     	; 0x61c <vfprintf+0xca>
 5da:	27 fd       	sbrc	r18, 7
 5dc:	27 c0       	rjmp	.+78     	; 0x62c <vfprintf+0xda>
 5de:	30 ed       	ldi	r19, 0xD0	; 208
 5e0:	38 0f       	add	r19, r24
 5e2:	3a 30       	cpi	r19, 0x0A	; 10
 5e4:	78 f4       	brcc	.+30     	; 0x604 <vfprintf+0xb2>
 5e6:	26 ff       	sbrs	r18, 6
 5e8:	06 c0       	rjmp	.+12     	; 0x5f6 <vfprintf+0xa4>
 5ea:	fa e0       	ldi	r31, 0x0A	; 10
 5ec:	5f 9e       	mul	r5, r31
 5ee:	30 0d       	add	r19, r0
 5f0:	11 24       	eor	r1, r1
 5f2:	53 2e       	mov	r5, r19
 5f4:	13 c0       	rjmp	.+38     	; 0x61c <vfprintf+0xca>
 5f6:	8a e0       	ldi	r24, 0x0A	; 10
 5f8:	38 9e       	mul	r3, r24
 5fa:	30 0d       	add	r19, r0
 5fc:	11 24       	eor	r1, r1
 5fe:	33 2e       	mov	r3, r19
 600:	20 62       	ori	r18, 0x20	; 32
 602:	0c c0       	rjmp	.+24     	; 0x61c <vfprintf+0xca>
 604:	8e 32       	cpi	r24, 0x2E	; 46
 606:	21 f4       	brne	.+8      	; 0x610 <vfprintf+0xbe>
 608:	26 fd       	sbrc	r18, 6
 60a:	6b c1       	rjmp	.+726    	; 0x8e2 <vfprintf+0x390>
 60c:	20 64       	ori	r18, 0x40	; 64
 60e:	06 c0       	rjmp	.+12     	; 0x61c <vfprintf+0xca>
 610:	8c 36       	cpi	r24, 0x6C	; 108
 612:	11 f4       	brne	.+4      	; 0x618 <vfprintf+0xc6>
 614:	20 68       	ori	r18, 0x80	; 128
 616:	02 c0       	rjmp	.+4      	; 0x61c <vfprintf+0xca>
 618:	88 36       	cpi	r24, 0x68	; 104
 61a:	41 f4       	brne	.+16     	; 0x62c <vfprintf+0xda>
 61c:	f6 01       	movw	r30, r12
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	6f 01       	movw	r12, r30
 628:	81 11       	cpse	r24, r1
 62a:	c1 cf       	rjmp	.-126    	; 0x5ae <vfprintf+0x5c>
 62c:	98 2f       	mov	r25, r24
 62e:	9f 7d       	andi	r25, 0xDF	; 223
 630:	95 54       	subi	r25, 0x45	; 69
 632:	93 30       	cpi	r25, 0x03	; 3
 634:	28 f4       	brcc	.+10     	; 0x640 <vfprintf+0xee>
 636:	0c 5f       	subi	r16, 0xFC	; 252
 638:	1f 4f       	sbci	r17, 0xFF	; 255
 63a:	ff e3       	ldi	r31, 0x3F	; 63
 63c:	f9 83       	std	Y+1, r31	; 0x01
 63e:	0d c0       	rjmp	.+26     	; 0x65a <vfprintf+0x108>
 640:	83 36       	cpi	r24, 0x63	; 99
 642:	31 f0       	breq	.+12     	; 0x650 <vfprintf+0xfe>
 644:	83 37       	cpi	r24, 0x73	; 115
 646:	71 f0       	breq	.+28     	; 0x664 <vfprintf+0x112>
 648:	83 35       	cpi	r24, 0x53	; 83
 64a:	09 f0       	breq	.+2      	; 0x64e <vfprintf+0xfc>
 64c:	5b c0       	rjmp	.+182    	; 0x704 <vfprintf+0x1b2>
 64e:	22 c0       	rjmp	.+68     	; 0x694 <vfprintf+0x142>
 650:	f8 01       	movw	r30, r16
 652:	80 81       	ld	r24, Z
 654:	89 83       	std	Y+1, r24	; 0x01
 656:	0e 5f       	subi	r16, 0xFE	; 254
 658:	1f 4f       	sbci	r17, 0xFF	; 255
 65a:	44 24       	eor	r4, r4
 65c:	43 94       	inc	r4
 65e:	51 2c       	mov	r5, r1
 660:	54 01       	movw	r10, r8
 662:	15 c0       	rjmp	.+42     	; 0x68e <vfprintf+0x13c>
 664:	38 01       	movw	r6, r16
 666:	f2 e0       	ldi	r31, 0x02	; 2
 668:	6f 0e       	add	r6, r31
 66a:	71 1c       	adc	r7, r1
 66c:	f8 01       	movw	r30, r16
 66e:	a0 80       	ld	r10, Z
 670:	b1 80       	ldd	r11, Z+1	; 0x01
 672:	26 ff       	sbrs	r18, 6
 674:	03 c0       	rjmp	.+6      	; 0x67c <vfprintf+0x12a>
 676:	65 2d       	mov	r22, r5
 678:	70 e0       	ldi	r23, 0x00	; 0
 67a:	02 c0       	rjmp	.+4      	; 0x680 <vfprintf+0x12e>
 67c:	6f ef       	ldi	r22, 0xFF	; 255
 67e:	7f ef       	ldi	r23, 0xFF	; 255
 680:	c5 01       	movw	r24, r10
 682:	2c 87       	std	Y+12, r18	; 0x0c
 684:	0e 94 86 04 	call	0x90c	; 0x90c <strnlen>
 688:	2c 01       	movw	r4, r24
 68a:	83 01       	movw	r16, r6
 68c:	2c 85       	ldd	r18, Y+12	; 0x0c
 68e:	2f 77       	andi	r18, 0x7F	; 127
 690:	22 2e       	mov	r2, r18
 692:	17 c0       	rjmp	.+46     	; 0x6c2 <vfprintf+0x170>
 694:	38 01       	movw	r6, r16
 696:	f2 e0       	ldi	r31, 0x02	; 2
 698:	6f 0e       	add	r6, r31
 69a:	71 1c       	adc	r7, r1
 69c:	f8 01       	movw	r30, r16
 69e:	a0 80       	ld	r10, Z
 6a0:	b1 80       	ldd	r11, Z+1	; 0x01
 6a2:	26 ff       	sbrs	r18, 6
 6a4:	03 c0       	rjmp	.+6      	; 0x6ac <vfprintf+0x15a>
 6a6:	65 2d       	mov	r22, r5
 6a8:	70 e0       	ldi	r23, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <vfprintf+0x15e>
 6ac:	6f ef       	ldi	r22, 0xFF	; 255
 6ae:	7f ef       	ldi	r23, 0xFF	; 255
 6b0:	c5 01       	movw	r24, r10
 6b2:	2c 87       	std	Y+12, r18	; 0x0c
 6b4:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <strnlen_P>
 6b8:	2c 01       	movw	r4, r24
 6ba:	2c 85       	ldd	r18, Y+12	; 0x0c
 6bc:	20 68       	ori	r18, 0x80	; 128
 6be:	22 2e       	mov	r2, r18
 6c0:	83 01       	movw	r16, r6
 6c2:	23 fc       	sbrc	r2, 3
 6c4:	1b c0       	rjmp	.+54     	; 0x6fc <vfprintf+0x1aa>
 6c6:	83 2d       	mov	r24, r3
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	48 16       	cp	r4, r24
 6cc:	59 06       	cpc	r5, r25
 6ce:	b0 f4       	brcc	.+44     	; 0x6fc <vfprintf+0x1aa>
 6d0:	b7 01       	movw	r22, r14
 6d2:	80 e2       	ldi	r24, 0x20	; 32
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 6da:	3a 94       	dec	r3
 6dc:	f4 cf       	rjmp	.-24     	; 0x6c6 <vfprintf+0x174>
 6de:	f5 01       	movw	r30, r10
 6e0:	27 fc       	sbrc	r2, 7
 6e2:	85 91       	lpm	r24, Z+
 6e4:	27 fe       	sbrs	r2, 7
 6e6:	81 91       	ld	r24, Z+
 6e8:	5f 01       	movw	r10, r30
 6ea:	b7 01       	movw	r22, r14
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 6f2:	31 10       	cpse	r3, r1
 6f4:	3a 94       	dec	r3
 6f6:	f1 e0       	ldi	r31, 0x01	; 1
 6f8:	4f 1a       	sub	r4, r31
 6fa:	51 08       	sbc	r5, r1
 6fc:	41 14       	cp	r4, r1
 6fe:	51 04       	cpc	r5, r1
 700:	71 f7       	brne	.-36     	; 0x6de <vfprintf+0x18c>
 702:	e5 c0       	rjmp	.+458    	; 0x8ce <vfprintf+0x37c>
 704:	84 36       	cpi	r24, 0x64	; 100
 706:	11 f0       	breq	.+4      	; 0x70c <vfprintf+0x1ba>
 708:	89 36       	cpi	r24, 0x69	; 105
 70a:	39 f5       	brne	.+78     	; 0x75a <vfprintf+0x208>
 70c:	f8 01       	movw	r30, r16
 70e:	27 ff       	sbrs	r18, 7
 710:	07 c0       	rjmp	.+14     	; 0x720 <vfprintf+0x1ce>
 712:	60 81       	ld	r22, Z
 714:	71 81       	ldd	r23, Z+1	; 0x01
 716:	82 81       	ldd	r24, Z+2	; 0x02
 718:	93 81       	ldd	r25, Z+3	; 0x03
 71a:	0c 5f       	subi	r16, 0xFC	; 252
 71c:	1f 4f       	sbci	r17, 0xFF	; 255
 71e:	08 c0       	rjmp	.+16     	; 0x730 <vfprintf+0x1de>
 720:	60 81       	ld	r22, Z
 722:	71 81       	ldd	r23, Z+1	; 0x01
 724:	07 2e       	mov	r0, r23
 726:	00 0c       	add	r0, r0
 728:	88 0b       	sbc	r24, r24
 72a:	99 0b       	sbc	r25, r25
 72c:	0e 5f       	subi	r16, 0xFE	; 254
 72e:	1f 4f       	sbci	r17, 0xFF	; 255
 730:	2f 76       	andi	r18, 0x6F	; 111
 732:	72 2e       	mov	r7, r18
 734:	97 ff       	sbrs	r25, 7
 736:	09 c0       	rjmp	.+18     	; 0x74a <vfprintf+0x1f8>
 738:	90 95       	com	r25
 73a:	80 95       	com	r24
 73c:	70 95       	com	r23
 73e:	61 95       	neg	r22
 740:	7f 4f       	sbci	r23, 0xFF	; 255
 742:	8f 4f       	sbci	r24, 0xFF	; 255
 744:	9f 4f       	sbci	r25, 0xFF	; 255
 746:	20 68       	ori	r18, 0x80	; 128
 748:	72 2e       	mov	r7, r18
 74a:	2a e0       	ldi	r18, 0x0A	; 10
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	a4 01       	movw	r20, r8
 750:	0e 94 c9 04 	call	0x992	; 0x992 <__ultoa_invert>
 754:	a8 2e       	mov	r10, r24
 756:	a8 18       	sub	r10, r8
 758:	44 c0       	rjmp	.+136    	; 0x7e2 <vfprintf+0x290>
 75a:	85 37       	cpi	r24, 0x75	; 117
 75c:	29 f4       	brne	.+10     	; 0x768 <vfprintf+0x216>
 75e:	2f 7e       	andi	r18, 0xEF	; 239
 760:	b2 2e       	mov	r11, r18
 762:	2a e0       	ldi	r18, 0x0A	; 10
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	25 c0       	rjmp	.+74     	; 0x7b2 <vfprintf+0x260>
 768:	f2 2f       	mov	r31, r18
 76a:	f9 7f       	andi	r31, 0xF9	; 249
 76c:	bf 2e       	mov	r11, r31
 76e:	8f 36       	cpi	r24, 0x6F	; 111
 770:	c1 f0       	breq	.+48     	; 0x7a2 <vfprintf+0x250>
 772:	18 f4       	brcc	.+6      	; 0x77a <vfprintf+0x228>
 774:	88 35       	cpi	r24, 0x58	; 88
 776:	79 f0       	breq	.+30     	; 0x796 <vfprintf+0x244>
 778:	b4 c0       	rjmp	.+360    	; 0x8e2 <vfprintf+0x390>
 77a:	80 37       	cpi	r24, 0x70	; 112
 77c:	19 f0       	breq	.+6      	; 0x784 <vfprintf+0x232>
 77e:	88 37       	cpi	r24, 0x78	; 120
 780:	21 f0       	breq	.+8      	; 0x78a <vfprintf+0x238>
 782:	af c0       	rjmp	.+350    	; 0x8e2 <vfprintf+0x390>
 784:	2f 2f       	mov	r18, r31
 786:	20 61       	ori	r18, 0x10	; 16
 788:	b2 2e       	mov	r11, r18
 78a:	b4 fe       	sbrs	r11, 4
 78c:	0d c0       	rjmp	.+26     	; 0x7a8 <vfprintf+0x256>
 78e:	8b 2d       	mov	r24, r11
 790:	84 60       	ori	r24, 0x04	; 4
 792:	b8 2e       	mov	r11, r24
 794:	09 c0       	rjmp	.+18     	; 0x7a8 <vfprintf+0x256>
 796:	24 ff       	sbrs	r18, 4
 798:	0a c0       	rjmp	.+20     	; 0x7ae <vfprintf+0x25c>
 79a:	9f 2f       	mov	r25, r31
 79c:	96 60       	ori	r25, 0x06	; 6
 79e:	b9 2e       	mov	r11, r25
 7a0:	06 c0       	rjmp	.+12     	; 0x7ae <vfprintf+0x25c>
 7a2:	28 e0       	ldi	r18, 0x08	; 8
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <vfprintf+0x260>
 7a8:	20 e1       	ldi	r18, 0x10	; 16
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x260>
 7ae:	20 e1       	ldi	r18, 0x10	; 16
 7b0:	32 e0       	ldi	r19, 0x02	; 2
 7b2:	f8 01       	movw	r30, r16
 7b4:	b7 fe       	sbrs	r11, 7
 7b6:	07 c0       	rjmp	.+14     	; 0x7c6 <vfprintf+0x274>
 7b8:	60 81       	ld	r22, Z
 7ba:	71 81       	ldd	r23, Z+1	; 0x01
 7bc:	82 81       	ldd	r24, Z+2	; 0x02
 7be:	93 81       	ldd	r25, Z+3	; 0x03
 7c0:	0c 5f       	subi	r16, 0xFC	; 252
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	06 c0       	rjmp	.+12     	; 0x7d2 <vfprintf+0x280>
 7c6:	60 81       	ld	r22, Z
 7c8:	71 81       	ldd	r23, Z+1	; 0x01
 7ca:	80 e0       	ldi	r24, 0x00	; 0
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 5f       	subi	r16, 0xFE	; 254
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	a4 01       	movw	r20, r8
 7d4:	0e 94 c9 04 	call	0x992	; 0x992 <__ultoa_invert>
 7d8:	a8 2e       	mov	r10, r24
 7da:	a8 18       	sub	r10, r8
 7dc:	fb 2d       	mov	r31, r11
 7de:	ff 77       	andi	r31, 0x7F	; 127
 7e0:	7f 2e       	mov	r7, r31
 7e2:	76 fe       	sbrs	r7, 6
 7e4:	0b c0       	rjmp	.+22     	; 0x7fc <vfprintf+0x2aa>
 7e6:	37 2d       	mov	r19, r7
 7e8:	3e 7f       	andi	r19, 0xFE	; 254
 7ea:	a5 14       	cp	r10, r5
 7ec:	50 f4       	brcc	.+20     	; 0x802 <vfprintf+0x2b0>
 7ee:	74 fe       	sbrs	r7, 4
 7f0:	0a c0       	rjmp	.+20     	; 0x806 <vfprintf+0x2b4>
 7f2:	72 fc       	sbrc	r7, 2
 7f4:	08 c0       	rjmp	.+16     	; 0x806 <vfprintf+0x2b4>
 7f6:	37 2d       	mov	r19, r7
 7f8:	3e 7e       	andi	r19, 0xEE	; 238
 7fa:	05 c0       	rjmp	.+10     	; 0x806 <vfprintf+0x2b4>
 7fc:	ba 2c       	mov	r11, r10
 7fe:	37 2d       	mov	r19, r7
 800:	03 c0       	rjmp	.+6      	; 0x808 <vfprintf+0x2b6>
 802:	ba 2c       	mov	r11, r10
 804:	01 c0       	rjmp	.+2      	; 0x808 <vfprintf+0x2b6>
 806:	b5 2c       	mov	r11, r5
 808:	34 ff       	sbrs	r19, 4
 80a:	0d c0       	rjmp	.+26     	; 0x826 <vfprintf+0x2d4>
 80c:	fe 01       	movw	r30, r28
 80e:	ea 0d       	add	r30, r10
 810:	f1 1d       	adc	r31, r1
 812:	80 81       	ld	r24, Z
 814:	80 33       	cpi	r24, 0x30	; 48
 816:	11 f4       	brne	.+4      	; 0x81c <vfprintf+0x2ca>
 818:	39 7e       	andi	r19, 0xE9	; 233
 81a:	09 c0       	rjmp	.+18     	; 0x82e <vfprintf+0x2dc>
 81c:	32 ff       	sbrs	r19, 2
 81e:	06 c0       	rjmp	.+12     	; 0x82c <vfprintf+0x2da>
 820:	b3 94       	inc	r11
 822:	b3 94       	inc	r11
 824:	04 c0       	rjmp	.+8      	; 0x82e <vfprintf+0x2dc>
 826:	83 2f       	mov	r24, r19
 828:	86 78       	andi	r24, 0x86	; 134
 82a:	09 f0       	breq	.+2      	; 0x82e <vfprintf+0x2dc>
 82c:	b3 94       	inc	r11
 82e:	33 fd       	sbrc	r19, 3
 830:	13 c0       	rjmp	.+38     	; 0x858 <vfprintf+0x306>
 832:	30 ff       	sbrs	r19, 0
 834:	06 c0       	rjmp	.+12     	; 0x842 <vfprintf+0x2f0>
 836:	5a 2c       	mov	r5, r10
 838:	b3 14       	cp	r11, r3
 83a:	18 f4       	brcc	.+6      	; 0x842 <vfprintf+0x2f0>
 83c:	53 0c       	add	r5, r3
 83e:	5b 18       	sub	r5, r11
 840:	b3 2c       	mov	r11, r3
 842:	b3 14       	cp	r11, r3
 844:	68 f4       	brcc	.+26     	; 0x860 <vfprintf+0x30e>
 846:	b7 01       	movw	r22, r14
 848:	80 e2       	ldi	r24, 0x20	; 32
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	3c 87       	std	Y+12, r19	; 0x0c
 84e:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 852:	b3 94       	inc	r11
 854:	3c 85       	ldd	r19, Y+12	; 0x0c
 856:	f5 cf       	rjmp	.-22     	; 0x842 <vfprintf+0x2f0>
 858:	b3 14       	cp	r11, r3
 85a:	10 f4       	brcc	.+4      	; 0x860 <vfprintf+0x30e>
 85c:	3b 18       	sub	r3, r11
 85e:	01 c0       	rjmp	.+2      	; 0x862 <vfprintf+0x310>
 860:	31 2c       	mov	r3, r1
 862:	34 ff       	sbrs	r19, 4
 864:	12 c0       	rjmp	.+36     	; 0x88a <vfprintf+0x338>
 866:	b7 01       	movw	r22, r14
 868:	80 e3       	ldi	r24, 0x30	; 48
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	3c 87       	std	Y+12, r19	; 0x0c
 86e:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 872:	3c 85       	ldd	r19, Y+12	; 0x0c
 874:	32 ff       	sbrs	r19, 2
 876:	17 c0       	rjmp	.+46     	; 0x8a6 <vfprintf+0x354>
 878:	31 fd       	sbrc	r19, 1
 87a:	03 c0       	rjmp	.+6      	; 0x882 <vfprintf+0x330>
 87c:	88 e7       	ldi	r24, 0x78	; 120
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	02 c0       	rjmp	.+4      	; 0x886 <vfprintf+0x334>
 882:	88 e5       	ldi	r24, 0x58	; 88
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	b7 01       	movw	r22, r14
 888:	0c c0       	rjmp	.+24     	; 0x8a2 <vfprintf+0x350>
 88a:	83 2f       	mov	r24, r19
 88c:	86 78       	andi	r24, 0x86	; 134
 88e:	59 f0       	breq	.+22     	; 0x8a6 <vfprintf+0x354>
 890:	31 ff       	sbrs	r19, 1
 892:	02 c0       	rjmp	.+4      	; 0x898 <vfprintf+0x346>
 894:	8b e2       	ldi	r24, 0x2B	; 43
 896:	01 c0       	rjmp	.+2      	; 0x89a <vfprintf+0x348>
 898:	80 e2       	ldi	r24, 0x20	; 32
 89a:	37 fd       	sbrc	r19, 7
 89c:	8d e2       	ldi	r24, 0x2D	; 45
 89e:	b7 01       	movw	r22, r14
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 8a6:	a5 14       	cp	r10, r5
 8a8:	38 f4       	brcc	.+14     	; 0x8b8 <vfprintf+0x366>
 8aa:	b7 01       	movw	r22, r14
 8ac:	80 e3       	ldi	r24, 0x30	; 48
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 8b4:	5a 94       	dec	r5
 8b6:	f7 cf       	rjmp	.-18     	; 0x8a6 <vfprintf+0x354>
 8b8:	aa 94       	dec	r10
 8ba:	f4 01       	movw	r30, r8
 8bc:	ea 0d       	add	r30, r10
 8be:	f1 1d       	adc	r31, r1
 8c0:	80 81       	ld	r24, Z
 8c2:	b7 01       	movw	r22, r14
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 8ca:	a1 10       	cpse	r10, r1
 8cc:	f5 cf       	rjmp	.-22     	; 0x8b8 <vfprintf+0x366>
 8ce:	33 20       	and	r3, r3
 8d0:	09 f4       	brne	.+2      	; 0x8d4 <vfprintf+0x382>
 8d2:	51 ce       	rjmp	.-862    	; 0x576 <vfprintf+0x24>
 8d4:	b7 01       	movw	r22, r14
 8d6:	80 e2       	ldi	r24, 0x20	; 32
 8d8:	90 e0       	ldi	r25, 0x00	; 0
 8da:	0e 94 91 04 	call	0x922	; 0x922 <fputc>
 8de:	3a 94       	dec	r3
 8e0:	f6 cf       	rjmp	.-20     	; 0x8ce <vfprintf+0x37c>
 8e2:	f7 01       	movw	r30, r14
 8e4:	86 81       	ldd	r24, Z+6	; 0x06
 8e6:	97 81       	ldd	r25, Z+7	; 0x07
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <vfprintf+0x39c>
 8ea:	8f ef       	ldi	r24, 0xFF	; 255
 8ec:	9f ef       	ldi	r25, 0xFF	; 255
 8ee:	2c 96       	adiw	r28, 0x0c	; 12
 8f0:	e2 e1       	ldi	r30, 0x12	; 18
 8f2:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__epilogue_restores__>

000008f6 <strnlen_P>:
 8f6:	fc 01       	movw	r30, r24
 8f8:	05 90       	lpm	r0, Z+
 8fa:	61 50       	subi	r22, 0x01	; 1
 8fc:	70 40       	sbci	r23, 0x00	; 0
 8fe:	01 10       	cpse	r0, r1
 900:	d8 f7       	brcc	.-10     	; 0x8f8 <strnlen_P+0x2>
 902:	80 95       	com	r24
 904:	90 95       	com	r25
 906:	8e 0f       	add	r24, r30
 908:	9f 1f       	adc	r25, r31
 90a:	08 95       	ret

0000090c <strnlen>:
 90c:	fc 01       	movw	r30, r24
 90e:	61 50       	subi	r22, 0x01	; 1
 910:	70 40       	sbci	r23, 0x00	; 0
 912:	01 90       	ld	r0, Z+
 914:	01 10       	cpse	r0, r1
 916:	d8 f7       	brcc	.-10     	; 0x90e <strnlen+0x2>
 918:	80 95       	com	r24
 91a:	90 95       	com	r25
 91c:	8e 0f       	add	r24, r30
 91e:	9f 1f       	adc	r25, r31
 920:	08 95       	ret

00000922 <fputc>:
 922:	0f 93       	push	r16
 924:	1f 93       	push	r17
 926:	cf 93       	push	r28
 928:	df 93       	push	r29
 92a:	fb 01       	movw	r30, r22
 92c:	23 81       	ldd	r18, Z+3	; 0x03
 92e:	21 fd       	sbrc	r18, 1
 930:	03 c0       	rjmp	.+6      	; 0x938 <fputc+0x16>
 932:	8f ef       	ldi	r24, 0xFF	; 255
 934:	9f ef       	ldi	r25, 0xFF	; 255
 936:	28 c0       	rjmp	.+80     	; 0x988 <fputc+0x66>
 938:	22 ff       	sbrs	r18, 2
 93a:	16 c0       	rjmp	.+44     	; 0x968 <fputc+0x46>
 93c:	46 81       	ldd	r20, Z+6	; 0x06
 93e:	57 81       	ldd	r21, Z+7	; 0x07
 940:	24 81       	ldd	r18, Z+4	; 0x04
 942:	35 81       	ldd	r19, Z+5	; 0x05
 944:	42 17       	cp	r20, r18
 946:	53 07       	cpc	r21, r19
 948:	44 f4       	brge	.+16     	; 0x95a <fputc+0x38>
 94a:	a0 81       	ld	r26, Z
 94c:	b1 81       	ldd	r27, Z+1	; 0x01
 94e:	9d 01       	movw	r18, r26
 950:	2f 5f       	subi	r18, 0xFF	; 255
 952:	3f 4f       	sbci	r19, 0xFF	; 255
 954:	31 83       	std	Z+1, r19	; 0x01
 956:	20 83       	st	Z, r18
 958:	8c 93       	st	X, r24
 95a:	26 81       	ldd	r18, Z+6	; 0x06
 95c:	37 81       	ldd	r19, Z+7	; 0x07
 95e:	2f 5f       	subi	r18, 0xFF	; 255
 960:	3f 4f       	sbci	r19, 0xFF	; 255
 962:	37 83       	std	Z+7, r19	; 0x07
 964:	26 83       	std	Z+6, r18	; 0x06
 966:	10 c0       	rjmp	.+32     	; 0x988 <fputc+0x66>
 968:	eb 01       	movw	r28, r22
 96a:	09 2f       	mov	r16, r25
 96c:	18 2f       	mov	r17, r24
 96e:	00 84       	ldd	r0, Z+8	; 0x08
 970:	f1 85       	ldd	r31, Z+9	; 0x09
 972:	e0 2d       	mov	r30, r0
 974:	09 95       	icall
 976:	89 2b       	or	r24, r25
 978:	e1 f6       	brne	.-72     	; 0x932 <fputc+0x10>
 97a:	8e 81       	ldd	r24, Y+6	; 0x06
 97c:	9f 81       	ldd	r25, Y+7	; 0x07
 97e:	01 96       	adiw	r24, 0x01	; 1
 980:	9f 83       	std	Y+7, r25	; 0x07
 982:	8e 83       	std	Y+6, r24	; 0x06
 984:	81 2f       	mov	r24, r17
 986:	90 2f       	mov	r25, r16
 988:	df 91       	pop	r29
 98a:	cf 91       	pop	r28
 98c:	1f 91       	pop	r17
 98e:	0f 91       	pop	r16
 990:	08 95       	ret

00000992 <__ultoa_invert>:
 992:	fa 01       	movw	r30, r20
 994:	aa 27       	eor	r26, r26
 996:	28 30       	cpi	r18, 0x08	; 8
 998:	51 f1       	breq	.+84     	; 0x9ee <__ultoa_invert+0x5c>
 99a:	20 31       	cpi	r18, 0x10	; 16
 99c:	81 f1       	breq	.+96     	; 0x9fe <__ultoa_invert+0x6c>
 99e:	e8 94       	clt
 9a0:	6f 93       	push	r22
 9a2:	6e 7f       	andi	r22, 0xFE	; 254
 9a4:	6e 5f       	subi	r22, 0xFE	; 254
 9a6:	7f 4f       	sbci	r23, 0xFF	; 255
 9a8:	8f 4f       	sbci	r24, 0xFF	; 255
 9aa:	9f 4f       	sbci	r25, 0xFF	; 255
 9ac:	af 4f       	sbci	r26, 0xFF	; 255
 9ae:	b1 e0       	ldi	r27, 0x01	; 1
 9b0:	3e d0       	rcall	.+124    	; 0xa2e <__ultoa_invert+0x9c>
 9b2:	b4 e0       	ldi	r27, 0x04	; 4
 9b4:	3c d0       	rcall	.+120    	; 0xa2e <__ultoa_invert+0x9c>
 9b6:	67 0f       	add	r22, r23
 9b8:	78 1f       	adc	r23, r24
 9ba:	89 1f       	adc	r24, r25
 9bc:	9a 1f       	adc	r25, r26
 9be:	a1 1d       	adc	r26, r1
 9c0:	68 0f       	add	r22, r24
 9c2:	79 1f       	adc	r23, r25
 9c4:	8a 1f       	adc	r24, r26
 9c6:	91 1d       	adc	r25, r1
 9c8:	a1 1d       	adc	r26, r1
 9ca:	6a 0f       	add	r22, r26
 9cc:	71 1d       	adc	r23, r1
 9ce:	81 1d       	adc	r24, r1
 9d0:	91 1d       	adc	r25, r1
 9d2:	a1 1d       	adc	r26, r1
 9d4:	20 d0       	rcall	.+64     	; 0xa16 <__ultoa_invert+0x84>
 9d6:	09 f4       	brne	.+2      	; 0x9da <__ultoa_invert+0x48>
 9d8:	68 94       	set
 9da:	3f 91       	pop	r19
 9dc:	2a e0       	ldi	r18, 0x0A	; 10
 9de:	26 9f       	mul	r18, r22
 9e0:	11 24       	eor	r1, r1
 9e2:	30 19       	sub	r19, r0
 9e4:	30 5d       	subi	r19, 0xD0	; 208
 9e6:	31 93       	st	Z+, r19
 9e8:	de f6       	brtc	.-74     	; 0x9a0 <__ultoa_invert+0xe>
 9ea:	cf 01       	movw	r24, r30
 9ec:	08 95       	ret
 9ee:	46 2f       	mov	r20, r22
 9f0:	47 70       	andi	r20, 0x07	; 7
 9f2:	40 5d       	subi	r20, 0xD0	; 208
 9f4:	41 93       	st	Z+, r20
 9f6:	b3 e0       	ldi	r27, 0x03	; 3
 9f8:	0f d0       	rcall	.+30     	; 0xa18 <__ultoa_invert+0x86>
 9fa:	c9 f7       	brne	.-14     	; 0x9ee <__ultoa_invert+0x5c>
 9fc:	f6 cf       	rjmp	.-20     	; 0x9ea <__ultoa_invert+0x58>
 9fe:	46 2f       	mov	r20, r22
 a00:	4f 70       	andi	r20, 0x0F	; 15
 a02:	40 5d       	subi	r20, 0xD0	; 208
 a04:	4a 33       	cpi	r20, 0x3A	; 58
 a06:	18 f0       	brcs	.+6      	; 0xa0e <__ultoa_invert+0x7c>
 a08:	49 5d       	subi	r20, 0xD9	; 217
 a0a:	31 fd       	sbrc	r19, 1
 a0c:	40 52       	subi	r20, 0x20	; 32
 a0e:	41 93       	st	Z+, r20
 a10:	02 d0       	rcall	.+4      	; 0xa16 <__ultoa_invert+0x84>
 a12:	a9 f7       	brne	.-22     	; 0x9fe <__ultoa_invert+0x6c>
 a14:	ea cf       	rjmp	.-44     	; 0x9ea <__ultoa_invert+0x58>
 a16:	b4 e0       	ldi	r27, 0x04	; 4
 a18:	a6 95       	lsr	r26
 a1a:	97 95       	ror	r25
 a1c:	87 95       	ror	r24
 a1e:	77 95       	ror	r23
 a20:	67 95       	ror	r22
 a22:	ba 95       	dec	r27
 a24:	c9 f7       	brne	.-14     	; 0xa18 <__ultoa_invert+0x86>
 a26:	00 97       	sbiw	r24, 0x00	; 0
 a28:	61 05       	cpc	r22, r1
 a2a:	71 05       	cpc	r23, r1
 a2c:	08 95       	ret
 a2e:	9b 01       	movw	r18, r22
 a30:	ac 01       	movw	r20, r24
 a32:	0a 2e       	mov	r0, r26
 a34:	06 94       	lsr	r0
 a36:	57 95       	ror	r21
 a38:	47 95       	ror	r20
 a3a:	37 95       	ror	r19
 a3c:	27 95       	ror	r18
 a3e:	ba 95       	dec	r27
 a40:	c9 f7       	brne	.-14     	; 0xa34 <__ultoa_invert+0xa2>
 a42:	62 0f       	add	r22, r18
 a44:	73 1f       	adc	r23, r19
 a46:	84 1f       	adc	r24, r20
 a48:	95 1f       	adc	r25, r21
 a4a:	a0 1d       	adc	r26, r0
 a4c:	08 95       	ret

00000a4e <__prologue_saves__>:
 a4e:	2f 92       	push	r2
 a50:	3f 92       	push	r3
 a52:	4f 92       	push	r4
 a54:	5f 92       	push	r5
 a56:	6f 92       	push	r6
 a58:	7f 92       	push	r7
 a5a:	8f 92       	push	r8
 a5c:	9f 92       	push	r9
 a5e:	af 92       	push	r10
 a60:	bf 92       	push	r11
 a62:	cf 92       	push	r12
 a64:	df 92       	push	r13
 a66:	ef 92       	push	r14
 a68:	ff 92       	push	r15
 a6a:	0f 93       	push	r16
 a6c:	1f 93       	push	r17
 a6e:	cf 93       	push	r28
 a70:	df 93       	push	r29
 a72:	cd b7       	in	r28, 0x3d	; 61
 a74:	de b7       	in	r29, 0x3e	; 62
 a76:	ca 1b       	sub	r28, r26
 a78:	db 0b       	sbc	r29, r27
 a7a:	0f b6       	in	r0, 0x3f	; 63
 a7c:	f8 94       	cli
 a7e:	de bf       	out	0x3e, r29	; 62
 a80:	0f be       	out	0x3f, r0	; 63
 a82:	cd bf       	out	0x3d, r28	; 61
 a84:	09 94       	ijmp

00000a86 <__epilogue_restores__>:
 a86:	2a 88       	ldd	r2, Y+18	; 0x12
 a88:	39 88       	ldd	r3, Y+17	; 0x11
 a8a:	48 88       	ldd	r4, Y+16	; 0x10
 a8c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a8e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a90:	7d 84       	ldd	r7, Y+13	; 0x0d
 a92:	8c 84       	ldd	r8, Y+12	; 0x0c
 a94:	9b 84       	ldd	r9, Y+11	; 0x0b
 a96:	aa 84       	ldd	r10, Y+10	; 0x0a
 a98:	b9 84       	ldd	r11, Y+9	; 0x09
 a9a:	c8 84       	ldd	r12, Y+8	; 0x08
 a9c:	df 80       	ldd	r13, Y+7	; 0x07
 a9e:	ee 80       	ldd	r14, Y+6	; 0x06
 aa0:	fd 80       	ldd	r15, Y+5	; 0x05
 aa2:	0c 81       	ldd	r16, Y+4	; 0x04
 aa4:	1b 81       	ldd	r17, Y+3	; 0x03
 aa6:	aa 81       	ldd	r26, Y+2	; 0x02
 aa8:	b9 81       	ldd	r27, Y+1	; 0x01
 aaa:	ce 0f       	add	r28, r30
 aac:	d1 1d       	adc	r29, r1
 aae:	0f b6       	in	r0, 0x3f	; 63
 ab0:	f8 94       	cli
 ab2:	de bf       	out	0x3e, r29	; 62
 ab4:	0f be       	out	0x3f, r0	; 63
 ab6:	cd bf       	out	0x3d, r28	; 61
 ab8:	ed 01       	movw	r28, r26
 aba:	08 95       	ret

00000abc <__do_global_dtors>:
 abc:	10 e0       	ldi	r17, 0x00	; 0
 abe:	cb e2       	ldi	r28, 0x2B	; 43
 ac0:	d0 e0       	ldi	r29, 0x00	; 0
 ac2:	04 c0       	rjmp	.+8      	; 0xacc <__do_global_dtors+0x10>
 ac4:	fe 01       	movw	r30, r28
 ac6:	0e 94 a3 02 	call	0x546	; 0x546 <__tablejump2__>
 aca:	21 96       	adiw	r28, 0x01	; 1
 acc:	cc 32       	cpi	r28, 0x2C	; 44
 ace:	d1 07       	cpc	r29, r17
 ad0:	c9 f7       	brne	.-14     	; 0xac4 <__do_global_dtors+0x8>
 ad2:	f8 94       	cli

00000ad4 <__stop_program>:
 ad4:	ff cf       	rjmp	.-2      	; 0xad4 <__stop_program>
